# Core version
# ------------
# Each makefile should begin by declaring the core version of Drupal that all
# projects should be compatible with.

core: '7.x'


# API version
# ------------
# Every makefile needs to declare it's Drush Make API version. This version of
# drush make uses API version `2`.

api: 2

# Core project
# ------------
# In order for your makefile to generate a full Drupal site, you must include
# a core project. This is usually Drupal core, but you can also specify
# alternative core projects like Pressflow. Note that makefiles included with
# install profiles *should not* include a core project.

# Use Pressflow instead of Drupal core:
# projects:
#   pressflow:
#     type: "core"
#     download:
#       type: "file"
#       url: "http://launchpad.net/pressflow/6.x/6.15.73/+download/pressflow-6.15.73.tar.gz"
#
# Git clone of Drupal 7.x. Requires the `core` property to be set to 7.x.
# projects
#   drupal:
#     type: "core"
#     download:
#       url: "http://git.drupal.org/project/drupal.git"

projects:
#  drupal:
#    version: ~

  # Projects
  # --------
  # Each project that you would like to include in the makefile should be
  # declared under the `projects` key. The simplest declaration of a project

  admin_menu:
    version: ~
  adminimal_admin_menu:
    version: ~
  admin_views:
    version: ~
  ctools:
    version: ~
  devel:
    version: ~
  entity:
    version: ~
  entityreference:
    version: ~
  jquery_update:
    version: ~
  module_filter:
    version: ~
  features:
    version: ~
  i18n:
    version: ~
  l10n_update:
    version: ~
  views:
    version: ~
  variable:
      version: ~
  views_bulk_operations:
    version: ~


  # Themes
  # --------
  bootstrap:
    type: theme
    version: ~
  adminimal_theme:
    type: theme
    version: ~

 # Clone a project from github.
  starter_theme:
    type: theme
    download:
      url: "git://github.com/nexusstar/drupal-bootstrap-starter-theme.git"
      branch: "less"
    # If you want to install a module into a sub-directory, you can use the
    # `subdir` attribute.
    subdir: "custom"


# If all projects or libraries share common attributes, the `defaults`
# array can be used to specify these globally, rather than
# per-project.

defaults:
  projects:
    subdir: "contrib"